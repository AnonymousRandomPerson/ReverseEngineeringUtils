import os
from dataclasses import dataclass

start_address = 0x9E8841C

base_pointers = [
  0x9F5185C,
  0x9F5218C,
  0x9F52D24,
  0x9F53728,
  0x9F53B10,
  0x9F54734,
  0x9F5506C,
  0x9F56720,
  0x9F56B8C,
  0x9F57254,
  0x9F57C58,
  0x9F588BC,
  0x9F59210,
  0x9F59F68,
  0x9F5B598,
  0x9F5CF8C,
  0x9F5DE00,
  0x9F5E8E0,
  0x9F5F9C8,
  0x9F60510,
  0x9F61EA8,
  0x9F63224,
  0x9F666B8,
  0x9F678E8,
  0x9F698F0,
  0x9F6AED8,
  0x9F6CDDC,
  0x9F6FBF8,
  0x9F71EC8,
  0x9F73E7C,
  0x9F75DD0,
  0x9F77848,
  0x9F79C08,
  0x9F7A6EC,
  0x9F7B9BC,
  0x9F7D470,
  0x9F7DD20,
  0x9F7FA74,
  0x9F7FC3C,
  0x9F81164,
  0x9F8192C,
  0x9F82150,
  0x9F832D4,
  0x9F83A88,
  0x9F86808,
  0x9F871BC,
  0x9F87678,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9F876AC,
  0x9F877DC,
  0x9F878FC,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9F88B90,
  0x9F89B38,
  0x9F8AE6C,
  0x9F8C1A0,
  0x9F8DCFC,
  0x9F8F384,
  0x9F8FD4C,
  0x9F90F70,
  0x9F93C60,
  0x9F94FBC,
  0x9F96190,
  0x9F976A0,
  0x9F97C6C,
  0x9F992BC,
  0x9F9961C,
  0x9F9B188,
  0x9F9BA2C,
  0x9F9CC24,
  0x9F9DDA0,
  0x9F9ECF4,
  0x9FA06B0,
  0x9FA0F50,
  0x9FA3AA0,
  0x9FA5254,
  0x9FA79C8,
  0x9FA8760,
  0x9FA9C7C,
  0x9FAB3D0,
  0x9FAC714,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9FAC838,
  0x9FAC944,
  0x9FAC9C4,
  0x9FACA5C,
  0x9FACB10,
  0x9FACC04,
  0x9FACCBC,
  0x9FACD28,
  0x9FACE3C,
  0x9E8841C,
  0x9FACF88,
  0x9FAD054,
  0x9FAD140,
  0x9FAD1DC,
  0x9FAD270,
  0x9FAD394,
  0x9FAD494,
  0x9FAD694,
  0x9FAD784,
  0x9FAD91C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9FAD938,
  0x9FAD95C,
  0x9FAD984,
  0x9FAD9A0,
  0x9FAD9C0,
  0x9FAD9E4,
  0x9FADA08,
  0x9FADA3C,
  0x9FADA6C,
  0x9FADA9C,
  0x9FADAC0,
  0x9FADB14,
  0x9FADB20,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9FADB58,
  0x9FADB94,
  0x9FADBB4,
  0x9FADBDC,
  0x9E8841C,
  0x9FADBE8,
  0x9FADC30,
  0x9FADCB8,
  0x9FADD38,
  0x9FADD8C,
  0x9FADDB4,
  0x9FADDDC,
  0x9FADE20,
  0x9FADE64,
  0x9FADE88,
  0x9FADF14,
  0x9FADF34,
  0x9FADF60,
  0x9FADF80,
  0x9E8841C,
  0x9E8841C,
  0x9FADFD8,
  0x9FAE038,
  0x9FAE184,
  0x9FAE1C4,
  0x9FAE250,
  0x9FAE2A4,
  0x9FAE2C8,
  0x9FAE2FC,
  0x9FAE328,
  0x9FAE358,
  0x9FAE380,
  0x9FAE3A8,
  0x9FAE3D4,
  0x9FAE3E0,
  0x9FAE408,
  0x9FAE43C,
  0x9FAE468,
  0x9FAE49C,
  0x9FAE4C4,
  0x9FAE4EC,
  0x9FAE968,
  0x9FAEA48,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9FAEA78,
  0x9FAEB64,
  0x9FAEB8C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9FAEBB8,
  0x9FAEBEC,
  0x9FAEC40,
  0x9FAECCC,
  0x9FAED10,
  0x9FAEDBC,
  0x9FAEDF8,
  0x9FAEE64,
  0x9FAEE84,
  0x9FAEEAC,
  0x9FAEED4,
  0x9FAEEE0,
  0x9FAEF34,
  0x9FAEF58,
  0x9FAEF90,
  0x9FAF004,
  0x9FAF044,
  0x9FAF0E0,
  0x9FAF16C,
  0x9FAF1F4,
  0x9FAF224,
  0x9FAF308,
  0x9FAF33C,
  0x9FAF3F0,
  0x9FAF3FC,
  0x9FAF4C4,
  0x9FAF654,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9FAF6A0,
  0x9FAF6E8,
  0x9FAF750,
  0x9FAF784,
  0x9FAF844,
  0x9FAF88C,
  0x9FAF904,
  0x9FAF95C,
  0x9FAF998,
  0x9FAF9F8,
  0x9FAFAD4,
  0x9FAFB08,
  0x9FAFB3C,
  0x9FAFB70,
  0x9FAFBAC,
  0x9FAFBE4,
  0x9FAFC20,
  0x9FAFC7C,
  0x9FAFCB0,
  0x9FAFD08,
  0x9FAFD74,
  0x9FAFDE8,
  0x9FAFE38,
  0x9FAFE84,
  0x9FAFF88,
  0x9FAFFB4,
  0x9FAFFE0,
  0x9FB006C,
  0x9FB0148,
  0x9FB019C,
  0x9FB0200,
  0x9FB0254,
  0x9FB02CC,
  0x9FB035C,
  0x9FB043C,
  0x9FB04D8,
  0x9FB05A8,
  0x9FB062C,
  0x9FB06C0,
  0x9FB08C4,
  0x9FB097C,
  0x9FB09E0,
  0x9FB0B9C,
  0x9FB0C20,
  0x9FB0CD0,
  0x9FB0D40,
  0x9E8841C,
  0x9FB0D9C,
  0x9FB0DC8,
  0x9FB0F4C,
  0x9FB11EC,
  0x9FB120C,
  0x9FB1254,
  0x9FB12CC,
  0x9FB1358,
  0x9FB13E0,
  0x9FB14F0,
  0x9FB1718,
  0x9FB17E4,
  0x9FB1874,
  0x9FB18A4,
  0x9FB1960,
  0x9FB198C,
  0x9FB1FC4,
  0x9FB2020,
  0x9FB2090,
  0x9FB20D8,
  0x9FB2284,
  0x9FB23C0,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9E8841C,
  0x9FB2438,
  0x9FB24F0,
  0x9FB254C,
  0x9FB257C,
  0x9FB25D0,
  0x9FB2644,
  0x9FB2690,
  0x9FB26D0,
  0x9FB2708,
  0x9FB2748,
  0x9FB279C,
  0x9FB2808,
  0x9FB286C,
  0x9FB28D0,
  0x9FB291C,
  0x9FB29A4,
  0x9FB29E0,
  0x9FB2A30,
  0x9FB2A80,
  0x9FB2AC8,
  0x9FB2AF8,
  0x9FB2B1C,
  0x9FB2BB0,
  0x9FB2C04,
  0x9FB2C8C,
  0x9FB2CDC,
  0x9FB2D08,
  0x9FB2D54,
  0x9FB2D7C,
  0x9FB2E28,
  0x9FB2E80,
  0x9FB2EB4,
  0x9FB2F20,
  0x9FB2F2C,
  0x9FB2F34,
  0x9FB2F3C,
  0x9FB2F68,
  0x9FB2F74,
  0x9FB2FE4,
  0x9FB3008,
  0x9FB3074,
  0x9FB30F0,
  0x9FB314C,
  0x9FB31B0,
  0x9FB3228,
  0x9FB327C,
  0x9FB32EC,
  0x9FB3334,
  0x9FB3378,
  0x9FB33F8,
  0x9FB3474,
  0x9FB34EC,
  0x9FB3530,
  0x9FB35A4,
  0x9FB3618,
  0x9FB3698,
  0x9FB371C,
  0x9FB37D0,
  0x9FB37FC,
  0x9FB384C,
  0x9FB39C0,
  0x9FB3A3C,
  0x9FB3A9C,
  0x9FB3AF4,
  0x9FB3C08,
  0x9FB3CB0,
  0x9FB3D0C,
  0x9FB3D5C,
  0x9FB3DB0,
  0x9FB3E24,
  0x9FB3F60,
  0x9FB400C,
  0x9FB4094,
  0x9FB411C,
  0x9FB4230,
  0x9FB4324,
  0x9FB4350,
  0x9FB43D0,
  0x9FB44E0,
  0x9FB4554,
  0x9FB45B0,
  0x9FB4658,
  0x9FB46D4,
  0x9FB4750,
  0x9FB47C4,
  0x9FB4820,
  0x9FB4874,
  0x9FB48B8,
  0x9FB4910,
  0x9FB497C,
  0x9FB49E4,
  0x9FB4A4C,
  0x9FB4AF0,
  0x9FB4B84,
  0x9FB4BE8,
  0x9FB4C58,
  0x9FB4D44,
  0x9FB4E88,
  0x9FB4EDC,
  0x9FB4F94,
  0x9FB508C,
  0x9FB5140,
  0x9FB51A8,
  0x9FB5208,
  0x9FB5294,
  0x9FB534C,
  0x9FB53B0,
  0x9FB54DC,
  0x9FB55B0,
  0x9FB5688,
  0x9FB56DC,
  0x9FB5730,
  0x9FB57B8,
  0x9FB57EC,
  0x9FB5864,
  0x9FB5898,
  0x9FB58FC,
  0x9FB59DC,
  0x9FB5A64,
  0x9FB5AB0,
  0x9FB5B10,
  0x9FB5B98,
  0x9FB5CBC,
  0x9FB5D24,
  0x9FB5DD0,
  0x9FB5E88,
  0x9FB5ED4,
  0x9FB5EFC,
  0x9FB5F6C,
  0x9FB5FD4,
  0x9FB60A8,
  0x9FB617C,
  0x9FB6210,
  0x9FB62A4,
  0x9FB62EC,
  0x9FB63C4,
  0x9FB6440,
  0x9FB6484,
  0x9FB663C,
  0x9FB6740,
  0x9FB67C0,
  0x9FB6830,
  0x9FB68D8,
  0x9FB696C,
  0x9FB69D4,
  0x9FB6A58,
  0x9FB6AF8,
  0x9FB6B28,
  0x9FB6B70,
  0x9FB6C30,
  0x9FB6C94,
  0x9FB6D40,
  0x9FB6DB0,
  0x9FB6E88,
  0x9FB703C,
  0x9FB71F0,
  0x9FB73A8,
  0x9FB7464,
  0x9FB74D8,
  0x9FB7534,
  0x9FB7658,
  0x9FB7688,
  0x9FB7708,
  0x9FB7798,
  0x9FB77D8,
  0x9FB78F0,
  0x9FB792C,
  0x9FB79F0,
  0x9FB7AA8,
  0x9FB7B88,
  0x9FB7CDC,
  0x9FB7DA0,
  0x9FB7E28,
  0x9FB7EC4,
  0x9FB7F5C,
  0x9FB8074,
  0x9FB8150,
  0x9FB82B8,
  0x9FB834C,
  0x9FB85C0,
  0x9FB8670,
  0x9FB86C8,
  0x9FB87C4,
  0x9FB880C,
  0x9FB8884,
  0x9FB893C,
  0x9FB8B48,
  0x9FB8C5C,
  0x9FB8D14,
  0x9FB8D54,
  0x9FB8DF0,
  0x9FB8E40,
  0x9FB8F18,
  0x9FB8F68,
  0x9FB9000,
  0x9FB9070,
  0x9FB90E0,
  0x9FB9150,
  0x9FB9244,
  0x9FB9388,
  0x9FB93B4,
  0x9FB943C,
  0x9FB9528,
  0x9FB955C,
  0x9FB9568,
  0x9FB961C,
  0x9E8841C,
  0x9FB965C,
  0x9FB96B4,
  0x9FB9764,
  0x9FB97B8,
  0x9FB97F8,
  0x9FB9854,
  0x9FB988C,
  0x9FB9984,
  0x9FB9A68,
  0x9FB9AB0,
  0x9FB9AF8,
  0x9FB9BD0,
  0x9FB9C54,
  0x9FB9D58,
  0x9FB9D9C,
  0x9FB9DFC,
  0x9FB9E60,
  0x9FB9EBC,
  0x9FB9F34,
  0x9FBA014,
  0x9FBA07C,
  0x9FBA110,
  0x9FBA178,
  0x9FBA270,
  0x9FBA31C,
  0x9FBA3C8,
  0x9FBA4B0,
  0x9FBA508,
  0x9FBA54C,
  0x9FBA5C0,
  0x9FBA638,
  0x9FBA728,
  0x9FBA7A4,
  0x9FBA868,
  0x9FBA928,
  0x9FBA9A0,
  0x9FBAA34,
  0x9FBAA78,
  0x9FBAAD4,
  0x9FBAB48,
  0x9FBAC60,
  0x9FBACB0,
  0x9FBAD68,
  0x9FBADDC,
  0x9FBAE50,
  0x9FBAEC8,
  0x9FBAF40,
  0x9FBAF80,
  0x9FBAFDC,
  0x9FBB0B4,
  0x9FBB110,
  0x9FBB364,
  0x9FBB454,
  0x9FBB56C,
  0x9FBB660,
  0x9FBB754,
  0x9FBB7FC,
  0x9FBB848,
  0x9FBB894,
  0x9FBB90C,
  0x9FBB9DC,
  0x9FBBA20,
  0x9FBBA58,
  0x9FBBAC8,
  0x9FBBB38,
  0x9FBBB74,
  0x9FBBC20,
  0x9FBBC58,
  0x9FBBD08,
  0x9FBBD54,
  0x9FBBEB4,
  0x9FBBF44,
  0x9FBBF80,
  0x9FBBFC8,
  0x9FBC080,
  0x9FBC0C8,
  0x9FBC0F4,
  0x9FBC140,
  0x9FBC178,
  0x9FBC1B0,
  0x9FBC1EC,
  0x9FBC25C,
  0x9FBC340,
  0x9FBC37C,
  0x9FBC3AC,
  0x9FBC464,
  0x9FBC538,
  0x9FBC59C,
  0x9FBC674,
  0x9FBC6D8,
  0x9FBC890,
  0x9FBC8F4,
  0x9FBC990,
  0x9FBC9E0,
  0x9FBCA38,
  0x9FBCA94,
  0x9FBCAD4,
  0x9FBCB10,
  0x9FBCB50,
  0x9FBCB8C,
  0x9FBCBC4,
  0x9FBCBF4,
  0x9FBCC30,
  0x9FBCC6C,
  0x9FBCCB4,
  0x9FBCD0C,
  0x9FBCD68,
  0x9FBCDDC,
  0x9FBCE38,
  0x9FBCE44,
  0x9FBCE4C,
  0x9FBCE7C,
  0x9FBCEB0,
  0x9FBCEDC,
  0x9FBCF18,
  0x9FBCFA8,
  0x9FBCFB4,
  0x9FBCFD8,
  0x9FBD0E0,
  0x9FBD174,
  0x9FBD1E4,
  0x9FBD218,
  0x9FBD268,
  0x9FBD2D0,
  0x9FBD310,
  0x9FBD380,
  0x9FBD3B8,
  0x9FBD404,
  0x9FBD430,
  0x9FBD488,
  0x9FBD4B4,
  0x9FBD4EC,
  0x9FBD5C4,
]
base_pointers = set(base_pointers)

@dataclass
class TargetRange:
  start: int
  end: int

target_ranges = []

with open(os.path.join('pointer', 'raw.txt'), 'r') as raw_file:
  raw_text = raw_file.readlines()

def extract_size(line: str):
  return int(line[14:16] + line[8:10], 16)

for i, line in enumerate(raw_text):
  if line.startswith('.global'):
    pointer_address = int(line[len('.global gUnknown_') : -1], 16)
    if pointer_address in base_pointers:
      num_pointers = extract_size(raw_text[i + 2])
      if num_pointers > 0:
        target_ranges.append(TargetRange(pointer_address, pointer_address + 4 * (num_pointers + 2)))

for target_range in target_ranges:
  print(f'TargetRange({hex(target_range.start)}, {hex(target_range.end)}),')